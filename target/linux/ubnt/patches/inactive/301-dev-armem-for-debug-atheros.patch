--- linux-2.6.31/drivers/char/mem.c	2009-09-10 01:13:59.000000000 +0300
+++ mips-linux-2.6.31/drivers/char/mem.c	2011-03-17 17:03:09.000000000 +0200
@@ -838,6 +838,57 @@
 };
 #endif
 
+static loff_t memory_arlseek(struct file * file, loff_t offset, int orig)
+{
+        loff_t ret;
+
+        mutex_lock(&file->f_path.dentry->d_inode->i_mutex);
+        switch (orig) {
+                case 0:
+                        file->f_pos = offset & 0xffffffff;
+                        ret = file->f_pos;
+                        force_successful_syscall_return();
+                        break;
+                case 1:
+                        file->f_pos += offset;
+                        file->f_pos &= 0xffffffff;
+                        ret = file->f_pos;
+                        force_successful_syscall_return();
+                        break;
+                default:
+                        ret = -EINVAL;
+        }
+        mutex_unlock(&file->f_path.dentry->d_inode->i_mutex);
+        return ret;
+}
+
+static ssize_t read_armem(struct file *file, char __user *buf, 
+			 size_t count, loff_t *ppos)
+{
+	unsigned int	pos = (unsigned int)*ppos;
+	if (copy_to_user(buf, (void *)pos, count))
+		return -EFAULT;
+ 	*ppos += count;
+ 	return count;
+}
+
+static ssize_t write_armem(struct file * file, const char __user * buf, 
+			  size_t count, loff_t *ppos)
+{
+	unsigned int	pos = (unsigned int)*ppos;
+	if(copy_from_user((void *)pos, buf, count)) {
+		return -EFAULT;
+	}
+	*ppos += count;
+ 	return count;
+}
+
+static struct file_operations armem_fops = {
+	.llseek		= memory_arlseek,
+	.read		= read_armem,
+	.write		= write_armem,
+};
+
 static ssize_t kmsg_write(struct file * file, const char __user * buf,
 			  size_t count, loff_t *ppos)
 {
@@ -888,6 +939,7 @@
 #ifdef CONFIG_CRASH_DUMP
 	{12,"oldmem",    S_IRUSR | S_IWUSR | S_IRGRP, &oldmem_fops, NULL},
 #endif
+	{13,"armem",   S_IRUSR | S_IWUSR | S_IRGRP, &armem_fops},
 };
 
 static int memory_open(struct inode *inode, struct file *filp)
